<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>BigBo's blog</title><link href="http://bigbo.github.io/" rel="alternate"></link><link href="None/feeds/all.atom.xml" rel="self"></link><id>http://bigbo.github.io/</id><updated>2014-12-31T23:22:00+08:00</updated><entry><title>2014年度归档</title><link href="http://bigbo.github.io/pages/2014/12/31/2014%E5%B9%B4%E6%80%BB%E7%BB%93/" rel="alternate"></link><updated>2014-12-31T23:22:00+08:00</updated><author><name>ljingb</name></author><id>tag:bigbo.github.io,2014-12-31:pages/2014/12/31/2014年总结/</id><summary type="html">&lt;p&gt;在这2014年的结尾,陆陆续续的通过博客\微博\微信看到了好多人在对2014年做的一些总结.赶着2014的末班车,在此我也做些总结.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;工作&lt;/h3&gt;
&lt;p&gt;其实总的来说这一年是不平凡的一年.对于一个职场小白来说,应该从老东家说起.&lt;/p&gt;
&lt;p&gt;那时还是在东三环内的23层,同事还是那么的欢乐,口味依旧那么重.工作环境是那么的轻松欢乐,以至于时间过得那么快,快得都想说句"时间都去哪了".不知不觉公司3月份搬家如期而至;与此同时,项目上遇到的问题比想象中的困难的多的多.最终不得不以结束告终.队伍重组,从而走向了人生的转折.&lt;/p&gt;
&lt;p&gt;4月份来到了@大神的团队,追随一群大神的脚步.开始了一堆高达上的工作.监控\分析\报警,井井有条.让我感到工作的责任还是如此重大.工作内容是如此神圣,虽不能光宗耀祖,但是足可以向身边人吹嘘一番.&lt;/p&gt;
&lt;p&gt;7月犹豫而又慌乱的时代.想想终究算是过去了,就让它淹没在这个时代吧.&lt;/p&gt;
&lt;p&gt;10月没想到该来的还是来了,换了工作,从网到神奇的网站.算是第一次跳槽.想想现在依旧对老东家怀念.也因此终不再犹豫.踏入一个三无地带,从此红旗自己扛,不再有上午茶,中午的安稳觉,下午的集体会;更多的是自己寻找解决方案,尝试处理问题.&lt;/p&gt;
&lt;p&gt;总之找准自己的位置,朝向一个目标前进就是了.要说的是,感谢的人真的是太多了;@大忽悠,感谢把我带上了一条"不归"路;@张姐,感谢合作的那段时间给我指引了好多方向,感觉自己还是不给力,没能坚持到最后,没有给自己一个很好的交代.不过真的学了好多;@会长,感谢那么多的肺腑之言,可惜听了那么多的人生道理,可是依旧没有走好这段路.当然这是后话;@三斗@lantao@SevenShen,有幸跟你们擦肩而过,庆幸自己紧追随你们的步伐,虽然从来没追上过,只能心里默念"他们引擎是V8的".总的来说要感谢的人还是太多了.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;生活&lt;/h3&gt;
&lt;p&gt;改变生活的唯一途径就是自身努力.两年前就应该到手的驾照终于到手了;拥有了比较满意的"大白腿";参与了祖国提供的一次重反校园的考试;虽然与女票有过激烈的争执,但是感情还是一如既往的稳定.生活品质貌似没有提升,后续有待考证.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;主要技术&lt;/h3&gt;
&lt;h5&gt;Python+&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;历史问题,用自己所学,重构了一个内部系统,至于现在好用就不得而知了.算是对之前的学习总结.中间还用上了&lt;a href="http://gearman.org/"&gt;gearman&lt;/a&gt;,当然对于一向不会前端的我,照猫画虎的拼凑除了一个能看的页面也算是小有所成了.有展示,有监控,有搜索,有规整,有报警.维护的事情就交给@轩了,写的太烂不要骂我.&lt;/p&gt;
&lt;h5&gt;&lt;a href="http://www.moosefs.org/"&gt;MFS&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;分布式文件系统.研究跟大牛比不算深入.后续会在博客中做些总结.倒是在呆过的地方都留下了他的身影.还算是一个容易上手使用的文件系统.虽然被坑过,但还算是不错的(看使用场景).&lt;/p&gt;
&lt;h5&gt;&lt;a href="http://www.elasticsearch.com/"&gt;ELK&lt;/a&gt;框架&lt;/h5&gt;
&lt;p&gt;都不知从何说起了.跟随@三斗的脚步,学习研究整套方案的技术细节,调优方案.目前也正在使用打算推广的一套方案.后续如何,还都是未知.感觉自己慢慢的走向了数据挖掘的深坑.&lt;/p&gt;
&lt;h5&gt;GITHUB+Blog&lt;/h5&gt;
&lt;p&gt;终于动手做了,不知道能坚持多久,共勉.&lt;/p&gt;
&lt;p&gt;犹记得2014年初,当时对一年的期望是读一两本好书,coding坏一个键盘,如今的好书只翻了半本有余,键盘的按键依旧是那么轻快好用,对比一年前,只不过键帽发油发亮了.回想当时的期望,不由得对自己说声好傻好天真.如今展望2015,最大的期望就是能把blog坚持下去.&lt;/p&gt;</summary></entry><entry><title>用Pelican&amp;GitHubPages搭建个人博客</title><link href="http://bigbo.github.io/pages/2014/12/28/create-blog/" rel="alternate"></link><updated>2014-12-28T00:02:00+08:00</updated><author><name>ljingb</name></author><id>tag:bigbo.github.io,2014-12-28:pages/2014/12/28/create-blog/</id><summary type="html">&lt;h3&gt;前言&lt;/h3&gt;
&lt;p&gt;对于github.io早有认识,但是趋于各种懒,至今才动手.想把这几年的一些自己总结的东西做些记录,匆匆那些年,也应该给自己做些积累了.&lt;/p&gt;
&lt;p&gt;那么问题来了,建立github page有各种框架,例如:&lt;a href="http://jekyllrb.com/"&gt;jekyll&lt;/a&gt;,&lt;a href="https://github.com/Shopify/liquid/wiki/Liquid-for-Designers"&gt;liquid&lt;/a&gt;,&lt;a href="http://pelican-docs-zh-cn.readthedocs.org/en/latest/"&gt;Pelican&lt;/a&gt;等等,本文采用后者Pelican,关于Pelican不做过多介绍,想了解的就去连接到的文档看吧.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;搭建基础&lt;/h3&gt;
&lt;p&gt;Pelican基于Python,相比Wordpress等其他框架来说,它比较轻,另外有些自己的&lt;a href="http://docs.getpelican.com/en/3.3.0/#features"&gt;特性&lt;/a&gt;,再配合免费的github pages,非常棒!主要是在linux下进行搭建,过程中会涉及如下技术知识,不过都是很初级的使用,即使新手也可以很容易的上手.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pages.github.com"&gt;github pages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://git-scm.com/blog/2010/06/09/pro-git-zh.html"&gt;git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.python.org"&gt;python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/pip"&gt;pip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pelican-docs-zh-cn.readthedocs.org/en/latest"&gt;pelican&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wowubuntu.com/markdown/"&gt;markdown&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h3&gt;下载安装&lt;/h3&gt;
&lt;p&gt;由于是linux环境,大部分依赖是有的,没有的话可以通过yum/apt-get去安装.win的话就请参照安装.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;安装python&lt;/li&gt;
&lt;li&gt;安装git&lt;/li&gt;
&lt;li&gt;安装pip&lt;/li&gt;
&lt;li&gt;安装pelican&amp;amp;markdown    &lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install pelican
pip install markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;框架初建&lt;/h3&gt;
&lt;p&gt;创建文件夹,执行以下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir blog //注意命名
cd blog
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;pelican-quickstart执行命令后,可以依照向导,输入相关配置项,怎么填写可以很随意,后续都可以在pelicanconf.py文件中进行更改.&lt;/p&gt;
&lt;p&gt;命令成功执行后,会出现pelican的框架,如下所示:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;blog/
|-- content             # 存放输入的markdown或RST源文件
|-- output              # 存放最终生成的静态博客
|-- pelicanconf.py      # 配置文件
|-- develop_server.sh   # 测试服务器
|-- Makefile            # 管理博客的Makefile
`-- publishconf.py      # 发布文件，可删除
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上完成整体大的框架.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;填写内容&lt;/h4&gt;
&lt;p&gt;至此,我们可以开始使用Markdown创建一个页面,进入content文件夹,创建一个.md文件.大致如:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt text" src="/pictures/pic1.png" /&gt;&lt;/p&gt;
&lt;p&gt;可以通过截图看到我现在这个页面的Markdown版本的源文件,这里要说的是开头部分的&lt;strong&gt;Title,Category&lt;/strong&gt;等重点字段.详情见&lt;a href="http://pelican-docs-zh-cn.readthedocs.org/en/latest/getting_started.html#pelican"&gt;文档&lt;/a&gt;,涵义如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: 文章标题
Date: 创建日期
Modified: 修改日期
Category: 文章分类，标志本文处于该分类下
Tags: 文章标签，标志本文处于该标签下
Slug: URL中该文章的链接地址
Author: 作者
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以简单的写个内容做测试,然后回到&lt;strong&gt;blog&lt;/strong&gt;目录下.&lt;/p&gt;
&lt;p&gt;执行&lt;strong&gt;make html&lt;/strong&gt;生成html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[jingbo.li@zero bigbo-blog]$ make html 
pelican /home/jingbo.li/dev/bigbo-blog/content -o /home/jingbo.li/dev/bigbo-blog/output -s /home/jingbo.li/dev/bigbo-blog/pelicanconf.py 
Done: Processed 1 article(s), 0 draft(s) and 1 page(s) in 0.83 seconds.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;表示已经生成了html页面,可以去&lt;strong&gt;/blog/output&lt;/strong&gt;目录下查看已经生成的html页面.&lt;/p&gt;
&lt;p&gt;接着执行&lt;strong&gt;make server&lt;/strong&gt;开启服务,可以看到相关log&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[jingbo.li@zero bigbo-blog]$ make serve 
cd /home/jingbo.li/dev/bigbo-blog/output &amp;amp;&amp;amp; python -m pelican.server
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即可可以用浏览器访问&lt;strong&gt;http://localhost:8000&lt;/strong&gt;看到显示效果.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*AD:更多便捷命令&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make regenerate     #修改后自动创建静态界面(make html)
make devserver      #相当于regenerate+serve
make publish        #生成用于发布的html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;文档中还有其他一些命令,请自行发掘.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;设置相关&lt;/h3&gt;
&lt;hr /&gt;
&lt;h4&gt;主题选择&lt;/h4&gt;
&lt;p&gt;如果你能到这一步,那么恭喜你,你已经搭建完一个属于自己的博客了.以下是对自己博客的包装.
首先打开&lt;a href="http://www.pelicanthemes.com/"&gt;主题官网&lt;/a&gt;挑选自己喜欢的主题,当然我们可以把整个&lt;a href="https://github.com/getpelican/pelican-themes"&gt;主题库&lt;/a&gt;clone到本地.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; git clone https://github.com/getpelican/pelican-themes.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在可以自由选择不错的主题了.打开&lt;strong&gt;pelicanconf.py&lt;/strong&gt;配置文件,添加或是更改&lt;strong&gt;THEME&lt;/strong&gt;为自己喜欢的主题.更多配置请见&lt;a href="http://pelican-docs-zh-cn.readthedocs.org/en/latest/settings.html#id20"&gt;官方文档&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;例如选择notmyidea-cms-fr主题:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;THEME = &amp;#39;pelican-themes/notmyidea-cms-fr&amp;#39; #相对路径或是绝对路径
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h5&gt;link的图标不加载&lt;/h5&gt;
&lt;p&gt;主题选择后打开页面一看,擦,有些瑕疵,旁边的一些github等连接没有图片,影响美观不说B格瞬减.
连接上的小图标:&lt;/p&gt;
&lt;p&gt;&lt;img alt="如图上面的小图标" src="/pictures/pic2.png" title="u&amp;quot;如图上面的小图标&amp;quot;" /&gt;&lt;/p&gt;
&lt;p&gt;通过分析查看原因,得知是由于css问题,来到主题文件夹下,尝试修改加载的css文件:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="nt"&gt;cd&lt;/span&gt; &lt;span class="nt"&gt;pelican-themes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;notmyidea-cms-fr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;static&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;css&lt;/span&gt;
  &lt;span class="nt"&gt;vim&lt;/span&gt; &lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="nc"&gt;.css&lt;/span&gt;
  &lt;span class="err"&gt;#添加如下字段&lt;/span&gt;
  &lt;span class="nc"&gt;.social&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;github.com&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(&amp;#39;../images/icons/github.png&amp;#39;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;margin-right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;vertical-align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-3px&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
  &lt;span class="err"&gt;#注意在相应位置放上图标&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;久违的图标就会展现在你的眼前了,B格瞬间上升几个百分点.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;添加评论系统&lt;/h4&gt;
&lt;p&gt;历经沧桑,终于算是大功告成.等下!貌似还缺一个功能,评论系统.评论可以促进交流,所以这个当然不能少了.目前采用的是国外的评论系统&lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt;,安装流程注册填写,会给你博客相关站点分配一个&lt;strong&gt;Shortname&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;回到配置文件&lt;strong&gt;pelicanconf.py&lt;/strong&gt;添加配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;DISQUS_SITENAME = Shortname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在大功告成,可以生成页面开始把玩一番吧!&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;编写文章&lt;/h3&gt;
&lt;p&gt;几经转辗,终于可以发篇文章炫耀下了,哈哈哈.本文给予&lt;strong&gt;github pages&lt;/strong&gt;,当然如果你有自己的服务器可以根据&lt;a href="https://help.github.com/articles/creating-pages-with-the-automatic-generator/"&gt;官方教程&lt;/a&gt;设置你自己的站点服务器.这样你就拥有一个二级域名和一个版本库.任性的更新.&lt;/p&gt;
&lt;p&gt;进入&lt;strong&gt;&lt;em&gt;blog&lt;/em&gt;&lt;/strong&gt;目录下的&lt;strong&gt;&lt;em&gt;output&lt;/em&gt;&lt;/strong&gt;文件夹内,依次执行以下命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  git init
  git add .
  git remote add origin https://github.com/bigbo/bigbo.github.io
  git pull origin master
  git commit -m &amp;#39;create blog&amp;#39;
  git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然如果你不会git,没关系,现在先按照&lt;a href="http://www.git-scm.com/book/zh/v1"&gt;官方文档&lt;/a&gt;敲就可以了.熟悉git的同学可以选择使用框架提供的&lt;strong&gt;Makefile&lt;/strong&gt;文件进行一键上传.&lt;/p&gt;
&lt;p&gt;一个完整的博客创建发布流程算是完成了.最后打开浏览器访问github pages的域名即可访问.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;p&gt;目前博客已经可以满足基本的正常使用了.其实我们还可以对其进行不断完善,让其变得更优雅.后续再写些关于插件\配置等有关的内容.&lt;/p&gt;
&lt;p&gt;第一次建立属于自己的空间,写的过程中参见了网上不少的例子,内容都是参疵不齐.更多的是参照官方文档,或是请教&lt;a href="http://google.com"&gt;google&lt;/a&gt;,这个过程持续了3--4天,终于完成了第一篇,收获还是满满的.当然后续还会有第二第三篇.&lt;/p&gt;
&lt;p&gt;不管怎样,收获远大于付出.也算是为2014画上半个句号.希望 2015 come on!&lt;/p&gt;</summary></entry></feed>